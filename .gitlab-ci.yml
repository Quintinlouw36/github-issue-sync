stages:
  - install_deps
  - lint
  - test
  - build
  - staging
  - production

variables:                         &default-vars
  CI_IMAGE:                        "node:16.10"
  IMAGE_NAME:                      docker.io/paritytech/github-issue-sync
  APP_PORT:                        3000
  # Vault Section
  VAULT_ADDR:                      https://vault.parity-mgmt-vault.parity.io
  VAULT_AUTH_PATH:                 gitlab-parity-io-jwt
  VAULT_AUTH_ROLE:                 cicd_gitlab_parity_${CI_PROJECT_NAME}
  HELM_SECRETS_DRIVER:             vals

default:
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  interruptible:                   true
  tags:
    - kubernetes-parity-build
  image:                           $CI_IMAGE

.common-refs:                      &common-refs
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"
    - if: $CI_COMMIT_REF_NAME =~ /^[0-9]+$/                         # PRs

.staging-refs:                     &staging-refs
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^stg-v[0-9]+\.[0-9]+.*$/

.production-refs:                  &production-refs
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^v[0-9]+\.[0-9]+.*$/

.kubernetes-env:                   &kubernetes-env
  image:                           $CI_IMAGE
  tags:
    - kubernetes-parity-build

install-deps:
  <<:                              *common-refs
  stage:                           install_deps
  script:
    - yarn
  artifacts:
    name:                          ${CI_JOB_ID}_${CI_COMMIT_REF_NAME}
    when:                          on_success
    expire_in:                     1 hour
    paths:
      - ./node_modules
  tags:
    - kubernetes-parity-build

lint:
  stage:                           lint
  <<:                              *kubernetes-env
  <<:                              *common-refs
  script:
    # TODO: Use pre-commit run --all
    - echo "lint"

security-scan:
  stage:                           test
  <<:                              *kubernetes-env
  <<:                              *common-refs
  variables:
    CI_IMAGE:                      aquasec/trivy:latest
  script:
    - trivy fs .

# template task for building and pushing an image
.build-push-docker-image:          &build-push-docker-image
  <<:                              *kubernetes-env
  image:                           quay.io/buildah/stable
  script:
    - export VERSION="$CI_COMMIT_SHORT_SHA-CI_PIPELINE_ID"
    - test "$Docker_Hub_User_Parity" -a "$Docker_Hub_Pass_Parity" ||
        ( echo "no docker credentials provided"; exit 1 )
    - buildah bud
        --format=docker
        --build-arg VCS_REF="${CI_COMMIT_SHA}"
        --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
        --build-arg VERSION="$VERSION"
        --build-arg PORT="$APP_PORT"
        --tag "$IMAGE_NAME:$VERSION"
        --file src/server/Dockerfile .
    - echo "$Docker_Hub_Pass_Parity" |
        buildah login --username "$Docker_Hub_User_Parity" --password-stdin docker.io
    - buildah info
    - buildah push --format=v2s2 "$IMAGE_NAME:$VERSION"
  after_script:
    - buildah logout --all

build-push:
  stage:                           build
  <<:                              *staging-refs
  <<:                              *build-push-docker-image

# Deploy to Kubernetes
.deploy:                  &deploy-k8s
  script:
    # https://docs.gitlab.com/ee/ci/examples/authenticating-with-hashicorp-vault/#example
    - export VAULT_TOKEN="$(vault write -field=token auth/$VAULT_AUTH_PATH/login role=$VAULT_AUTH_ROLE jwt=$CI_JOB_JWT)"
    - helm dependency update helm/
    - helm secrets upgrade
        --install
        --atomic
        --timeout 300s
        --namespace github-issue-sync
        --values helm/$VALUES_FILE
        --set common.image.tag="$CI_COMMIT_SHORT_SHA"
        github-issue-sync helm/

deploy-staging:
  variables:
    CI_IMAGE:    "paritytech/kubetools:3.5.3"
    VALUES_FILE: values-stg.yaml
  stage:         staging
  environment:
    name:        parity-stg
  <<:            *kubernetes-env
  <<:            *staging-refs
  <<:            *deploy-k8s

deploy-production:
  variables:
    CI_IMAGE:    "paritytech/kubetools:3.5.3"
    VALUES_FILE: values-prod.yaml
  stage:         production
  environment:
    name:        parity-prod
  <<:            *kubernetes-env
  <<:            *production-refs
  <<:            *deploy-k8s
